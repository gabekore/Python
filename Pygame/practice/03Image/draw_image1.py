#! /usr/local/bin/python

# Python 3.5.1

#-------------------------------------
# import
#-------------------------------------
import sys
import os

# pygame系
import pygame
# pygameの定数はpygame.localsに入っている
from pygame.locals import QUIT, Rect


#-------------------------------------
# スイッチ
#-------------------------------------
# 画像のサブリージョン（0:off、1:on、通常:off）
SW_SUBREGION = 1

#-------------------------------------
# 定数
#-------------------------------------
# FPSクロック（1秒間に何回処理するか）
FPS_TIMES = 30

#-------------------------------------
# 初期処理
#-------------------------------------
# pygame初期化
pygame.init()

# ウィンドウ
w = pygame.display.set_mode((400, 300))

# ウィンドウのタイトル（タイトルバーに表示）
pygame.display.set_caption("My First Window")

# クロックオブジェクト
fpsclock = pygame.time.Clock()


#-------------------------------------
# 読み込んだ画像を表示するだけ
# 読み込んだ画像の一部分のみの表示もしている
#-------------------------------------
def main():
    
    # ロゴ画像読み込み
    log = pygame.image.load(os.path.join("..", "_images", "pythonlog.jpg"))
    
    
    #-------------------------------------
    # メインループ
    #-------------------------------------
    while True:
        for event in pygame.event.get():
            # イベントキューからイベントを取得
            # 閉じるボタンが押されたイベント発生
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
        
        #-------------------------------------
        # 画面塗り潰し（真っ白）
        #-------------------------------------
        w.fill((255,255,255))
        
        
        #-------------------------------------
        # ～処理～↓
        #-------------------------------------
        # ロゴ描画
        w.blit(log, (20,50))
        
        # Surface上に
        # => Surface.blit(source, dest, area=None, special_flags = 0): return Rect
        #    destはx/y座標（ウィンドウの左上が(0,0)、右下が(999,999)）
        # http://westplain.sakuraweb.com/translate/pygame/Surface.cgi#Surface.blit
        
        if SW_SUBREGION:
            # Rect()はarea
            # このarea値は、ソース画像の中から一部分だけを切り取って描写したい時に、その切り取る描写範囲
            w.blit(log, (250,50), Rect(50,50,100,100))

        #-------------------------------------
        # ～処理～↑
        #-------------------------------------
        
        
        #-------------------------------------
        # 画面更新
        #-------------------------------------
        pygame.display.update()
        
        #-------------------------------------
        # FPS CLOCK
        #-------------------------------------
        fpsclock.tick(FPS_TIMES)
        


#-------------------------------------
# メイン時のみmain()関数コール
#-------------------------------------
if __name__ == '__main__':
    main()
